#!/usr/bin/env bash

readonly DEFAULT_ELIXIR='1.9.0'
readonly DEFAULT_OTP='22.0.4'

ask_for_elixir_version() {
  echo -n "Elixir version [${DEFAULT_ELIXIR}]: " >&2
  read elixir_version
  echo "${elixir_version:-$DEFAULT_ELIXIR}"
}

ask_for_otp_version() {
  declare otp_version
  echo -n "Erlang version [${DEFAULT_OTP}]: " >&2
  read otp_version
  echo "${otp_version:-$DEFAULT_OTP}"
}

build() {
  declare otp_version=$1 elixir_version=$2 dockerfile=$3 name=$4
  local reference

  reference=$(docker_reference ${name} ${otp_version} ${elixir_version})

  docker build \
    --build-arg OTP_VERSION=${otp_version} \
    --build-arg ELIXIR_VERSION=${elixir_version} \
    -t "${reference}" \
    -f "${dockerfile}" \
    .
}

push() {
  declare name=$1 otp_version=$2 elixir_version=$3
  local reference

  reference=$(docker_reference ${name} ${otp_version} ${elixir_version})

  docker push "${reference}"
}

docker_reference() {
  declare name=$1 otp_version=$2 elixir_version=$3

  echo "livinginthepast/${name}:${otp_version}-${elixir_version}"
}

main() {
  declare otp_version elixir_version
  otp_version=$(ask_for_otp_version)
  elixir_version=$(ask_for_elixir_version)

  echo "Erlang: ${otp_version}, Elixir: ${elixir_version}"

  echo "*** BUILDING MAIN DOCKER IMAGE"

  build "${otp_version}" "${elixir_version}" Dockerfile elixir
  push elixir "${otp_version}" "${elixir_version}"

  echo
  echo "*** BUILDING HEX DOCKER IMAGE"

  build "${otp_version}" "${elixir_version}" Dockerfile-elixir-hex elixir-hex
  push elixir-hex "${otp_version}" "${elixir_version}"


  echo
  echo "*** BUILDING HEX YARN DOCKER IMAGE"

  build "${otp_version}" "${elixir_version}" Dockerfile-elixir-hex-yarn elixir-hex-yarn
  push elixir-hex-yarn "${otp_version}" "${elixir_version}"

  echo
  echo "*** BUILDING HEX YARN CHROMEDRIVER DOCKER IMAGE"

  build "${otp_version}" "${elixir_version}" Dockerfile-elixir-hex-yarn-chromedriver elixir-hex-yarn-chromedriver
  push elixir-hex-yarn-chromedriver "${otp_version}" "${elixir_version}"

}

main

